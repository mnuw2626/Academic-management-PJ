<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.academic.mapper.UserMapper">
    <!-- CourseDetailsDTO와 하위 객체 일부 매핑을 위한 resultMap 정의 -->
    <resultMap id="CourseDetailsResultMap" type="com.academic.dto.CourseDetailsDTO">
        <association property="college" javaType="com.academic.dto.CollegeDTO">
            <id column="std_college_id" property="id" />
            <result column="college_name" property="name" />
        </association>
        <association property="department" javaType="com.academic.dto.DepartmentDTO">
            <id column="std_dept_id" property="id" />
            <result column="dept_name" property="name" />
            <result column="std_college_id" property="collegeId" />
        </association>
        <association property="lecture" javaType="com.academic.dto.LectureDTO">
            <id column="lecture_code" property="code" />
            <result column="lecture_name" property="name" />
            <result column="lecture_grade" property="grade" />
            <result column="lecture_semester" property="semester" />
            <result column="lecture_credit" property="credit" />
            <result column="type" property="type" />
            <result column="week" property="week" />
            <result column="professor" property="professor"/>
            <result column="start_time" property="starTime" />
            <result column="end_time" property="endTime" />
            <result column="classroom" property="room" />
            <result column="lecture_year" property="year" />
        </association>
        <association property="std" javaType="com.academic.dto.StdDTO">
            <id column="std_no" property="stdNo" />
            <result column="std_name" property="name" />
            <result column="std_college_id" property="collegeId" />
            <result column="std_dept_id" property="deptId" />
            <result column="std_year" property="grade" />
            <result column="std_semester" property="semester" />
            <result column="std_credit" property="stdCredit" />
        </association>
        <association property="enroll" javaType="com.academic.dto.EnrollDTO">
            <id column="std_no" property="stdNo" />
            <id column="course_code" property="code" />
            <result column="grade" property="grade" />
        </association>
        <association property="score" javaType="com.academic.dto.GradeDTO">
            <id column="grade_type" property="gradeType" />
            <result column="grade_value" property="gradeValue" />
        </association>
    </resultMap>

    <resultMap id="user_with_students_map" type="com.academic.dto.StdDTO" autoMapping="true">
        <id property="id" column="id" />
        <result property="password" column="password" />
        <result property="tel" column="tel" />
        <result property="no" column="no" />
        <result property="stdNo" column="std_no" />
        <result property="name" column="name" />
        <result property="collegeId" column="college_id" />
        <result property="deptId" column="dept_id" />
        <result property="grade" column="grade" />
        <result property="semester" column="semester" />
    </resultMap>

    <resultMap id="student_with_tuition_map" type="com.academic.dto.StdDTO" autoMapping="true">
        <id property="id" column="id" />
        <result property="password" column="password" />
        <result property="tel" column="tel" />
        <result property="no" column="no" />
        <result property="stdNo" column="std_no" />
        <association property="tuitionDTO" javaType="com.academic.dto.TuitionDTO">
            <result property="stdNo" column="std_no" />
            <result property="check" column="status" />
            <result property="amount" column="amount" />
        </association>
    </resultMap>

    <select id="select_userInfo" resultType="com.academic.dto.UserDTO">
        SELECT * FROM `user`
        Where id = #{id}
    </select>

    <select id="select_all_userInfo" parameterType="String" resultMap="user_with_students_map">
        SELECT U.*, S.*
        FROM `student` AS S
                 INNER JOIN `user` AS U
                            ON U.no= S.std_no
        WHERE U.id = #{id}
    </select>

    <!--  학번으로 학생 정보 가져옴  -->
    <select id="select_std_info" resultType="com.academic.dto.StdDTO">
        SELECT * FROM `student`
        WHERE std_no = #{stdNo}
    </select>

    <!--  학생 테이블에 id 업데이트  -->
    <update id="update_std_id">
        update `student` set id = #{id}
        where std_no = #{stdNo}
    </update>


    <insert id="insert_user">
        insert into `user` (`id`, `password`, `tel`, `no`)
        values(#{id}, #{password}, #{tel}, #{no})
    </insert>

    <!--유저 등록금 조회-->
    <select id="select_scholarship" resultMap="student_with_tuition_map">
        SELECT T.*, S.*
        FROM `student` AS S
                 INNER JOIN `tuition` AS T
                 ON T.std_no= S.std_no
        WHERE S.std_no = #{no}
    </select>

    <!--등록금 납부-->
    <update id="update_std_scholarship">
        UPDATE `tuition` SET `check` = 1
        WHERE std_no = #{stdNo}
    </update>

    <!-- 휴학 신청 -->
    <insert id="insertLeaveApplication">
        INSERT INTO `stat` (std_no, name, status, start_date, end_date, application_date, reason, leave_count)
        VALUES (#{stdNo}, #{name}, #{status}, #{startDate}, #{endDate}, #{applicationDate}, #{reason}, #{leaveCount})
    </insert>

    <update id="updateLeaveApplication">
        UPDATE `stat`
        SET status = #{status}, start_date = #{startDate}, end_date = #{endDate},
            application_date = #{applicationDate}, reason = #{reason}, leave_count = #{leaveCount}
        WHERE std_no = #{stdNo}
    </update>

    <!-- 복학 신청 -->
    <update id="updateReturnApplication">
        UPDATE `stat`
        SET status = #{status}, start_date = #{startDate}, end_date = #{endDate},
            application_date = #{applicationDate}, reason = #{reason}
        WHERE std_no = #{stdNo}
    </update>

    <!-- 유저의 휴학/복학 상태 조회 -->
    <select id="select_stat" resultType="com.academic.dto.LeaveDTO">
        SELECT * FROM `stat` WHERE std_no = #{stdNo}
    </select>


    <select id="select_notice" resultType="com.academic.dto.NoticeDTO">
        SELECT * FROM `notice` WHERE no = #{noticeNo}
    </select>

    <select id="select_notices" resultType="com.academic.dto.NoticeDTO">
        SELECT * FROM `notice`
        <where>
            <if test="searchType == 'title'">
                <if test="title != null and title != ''">
                    title LIKE CONCAT('%', #{title}, '%')
                </if>
            </if>
            <if test="searchType == 'title_and_content'">
                <if test="title != null and title != ''">
                    (title LIKE CONCAT('%', #{title}, '%') OR content LIKE CONCAT('%', #{title}, '%'))
                </if>
            </if>
        </where>
        ORDER BY created_date DESC
    </select>

    <!-- 조회수 증가 -->
    <update id="update_view">
        UPDATE `notice`
        SET views = views + 1
        WHERE no = #{no}
    </update>

    <!-- 성적조회 -->
    <select id="get_score" resultMap="CourseDetailsResultMap">
        SELECT C.std_no,
               C.code AS course_code,
               C.grade,
               L.code AS lecture_code,
               L.name AS lecture_name,
               L.semester AS lecture_semester,
               L.credit AS lecture_credit,
               L.year AS lecture_year,
               G.grade_value
        FROM `course_details` AS C
                 INNER JOIN `student` S
                 ON C.std_no = S.std_no
                 INNER JOIN `lecture` AS L
                 ON L.code = C.code
                 INNER JOIN `grade` AS G
                 ON C.grade= G.grade_type
        WHERE S.std_no = #{stdNo}
        <if test="year != null and year != ''">
            AND L.year = #{year}
        </if>
        <if test="semester != null and semester != ''">
            AND L.semester = #{semester}
        </if>
    </select>
</mapper>