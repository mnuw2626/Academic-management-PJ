<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.academic.mapper.UserMapper">
    <resultMap id="user_with_students_map" type="com.academic.dto.StdDTO" autoMapping="true">
        <id property="id" column="id" />
        <result property="password" column="password" />
        <result property="tel" column="tel" />
        <result property="no" column="no" />
        <result property="stdNo" column="std_no" />
        <result property="name" column="name" />
        <result property="collegeId" column="college_id" />
        <result property="deptId" column="dept_id" />
        <result property="grade" column="grade" />
        <result property="semester" column="semester" />
    </resultMap>

    <resultMap id="student_with_tuition_map" type="com.academic.dto.StdDTO" autoMapping="true">
        <id property="id" column="id" />
        <result property="password" column="password" />
        <result property="tel" column="tel" />
        <result property="no" column="no" />
        <result property="stdNo" column="std_no" />
        <association property="tuitionDTO" javaType="com.academic.dto.TuitionDTO">
            <result property="stdNo" column="std_no" />
            <result property="status" column="status" />
            <result property="amount" column="amount" />
        </association>
    </resultMap>

    <select id="select_userInfo" resultType="com.academic.dto.UserDTO">
        SELECT * FROM `user`
        Where id = #{id}
    </select>

    <select id="select_all_userInfo" parameterType="String" resultMap="user_with_students_map">
        SELECT U.*, S.*
        FROM `student` AS S
                 INNER JOIN `user` AS U
                            ON U.no= S.std_no
        WHERE U.id = #{id}
    </select>

    <!--  학번으로 학생 정보 가져옴  -->
    <select id="select_std_info" resultType="com.academic.dto.StdDTO">
        SELECT * FROM `student`
        WHERE std_no = #{stdNo}
    </select>

    <update id="update_std_id">
        update `student` set id = #{id}
        where std_no = #{stdNo}
    </update>


    <insert id="insert_user">
        insert into `user` (`id`, `password`, `tel`, `no`)
        values(#{id}, #{password}, #{tel}, #{no})
    </insert>

    <!--유저 등록금 조회-->
    <select id="select_scholarship" resultMap="student_with_tuition_map">
        SELECT T.*, S.*
        FROM `student` AS S
                 INNER JOIN `tuition` AS T
                 ON T.std_no= S.std_no
        WHERE S.std_no = #{no}
    </select>

    <!--등록금 납부-->
    <update id="update_std_scholarship">
        UPDATE tuition SET status = 1
        WHERE std_no = #{stdNo}
    </update>

    <!--유저 등록금 조회-->
    <select id="select_scholarship" resultMap="student_with_tuition_map">
        SELECT T.*, S.*
        FROM `student` AS S
                 INNER JOIN `tuition` AS T
                 ON T.std_no= S.std_no
        WHERE S.std_no = #{no}
    </select>

    <!--등록금 납부-->
    <update id="update_std_scholarship">
        UPDATE tuition SET status = 1
        WHERE std_no = #{stdNo}
    </update>

</mapper>